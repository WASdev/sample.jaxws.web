apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'liberty'

group = 'liberty.maven'
version = '1.0-SNAPSHOT'

description = "Jaxws Web Sample"

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = 'Sonatype Nexus Snapshots'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.0-SNAPSHOT'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    libertyRuntime group: 'com.ibm.websphere.appserver.runtime', name: 'wlp-javaee7', version: '17.0.0.2'

    providedCompile group: 'org.apache.cxf', name: 'cxf-rt-rs-client', version:'3.1.1'
    providedCompile group: 'org.glassfish', name: 'javax.json', version:'1.0.4'
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    providedCompile group: 'jstl', name: 'jstl', version:'1.2'
}

sourceSets {
    main {
        output.resourcesDir = 'build/classes/java/main'
    }
}

war {
    archiveName = baseName + '.' + extension
}

liberty {

	server {
        packageLiberty {
            archive = "$buildDir/sample.jaxws.web.zip"
            include = 'usr'
        }
		configFile = file('src/main/liberty/config/server.xml')
		bootstrapProperties = ['appLocation':war.archiveName]
        //looseApplication = false
		apps = [war]
	}
}

task printServerMessage {
	doLast {
		println 'The server is running at http://localhost:9131/jaxws/'
	}
}

check.dependsOn 'libertyStart'
libertyStart.finalizedBy 'printServerMessage'
